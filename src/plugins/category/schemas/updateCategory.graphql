
"Input for `updateCategory` mutation"
input UpdateCategoryInput {
  "An optional string identifying the mutation call, which will be returned in the response payload"
  clientMutationId: String

  "Title to display to customers"
  displayTitle: String!

  "A list of the IDs of top products in this category"
  featuredProductIds: [ID]

  "Hero media URL"
  heroMediaUrl: String

  "ID of rule to modify"
  id: ID!

  "Whether the category is visible"
  isVisible: Boolean!

  "Category metafields"
  metafields: [MetafieldInput]

  "Unique name of the category"
  name: String!

  "The shop that owns the category"
  shopId: ID!

  "The category slug. If left blank, the name will be slugified and saved as the slug"
  slug: String
}

"Response payload for `updateCategory` mutation"
type UpdateCategoryPayload {
  "The same string you sent with the mutation params, for matching mutation calls with their responses"
  clientMutationId: String

  "The updated category"
  category: Category!
}

extend type Mutation {
  "Updates an existing category"
  updateCategory(
    "Mutation input"
    input: UpdateCategoryInput!
  ): UpdateCategoryPayload!
}
